% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BVS4GCR_MCMC.R
\name{BVS4GCR_MCMC}
\alias{BVS4GCR_MCMC}
\title{BVS4GCR_MCMC}
\usage{
BVS4GCR_MCMC(
  nits,
  burnin,
  thin,
  monitor,
  Y,
  X,
  pfixed,
  response_type,
  beta_binom = c(3, 1),
  missing_cont = FALSE,
  fullcov = FALSE,
  nondecomp = FALSE,
  ntrials = NULL,
  negbin_init = NULL
)
}
\arguments{
\item{nits}{Number of MCMC iterations (including burn-in)}

\item{burnin}{Number of iterations to be discarded as burn-in}

\item{thin}{Store the outcome at every thin-th iteration}

\item{monitor}{Display the monitored-th iteration}

\item{Y}{(number of samples) times (number of responses) matrix of responses}

\item{X}{(number of samples) times (number of predictors) matrix of predictors. If the model contains an intercept (for all
responses), the first column is a vector of ones, followed by the covariates and the predictors on which Bayesian Variable
Selection is performed}

\item{pfixed}{Number of covariates (including the intercept)}

\item{response_type}{Character vector specifying the response's type. Response's types currently supported are \code{c("Gaussian", 
"binary", "ordinal", "binomial", "negative binomial")}}

\item{beta_binom}{Parameters of the beta-binomial prior distribution. For details, see \insertCite{Kohn2001;textual}{BVS4GCR} and
\insertCite{Alexopoulos2019;textual}{BVS4GCR}}

\item{missing_cont}{Logical parameter that indicates the presence of missing values in any continuous response}

\item{fullcov}{Logical parameter to select full or sparse inverse correlation}

\item{nondecomp}{Logical, \code{TRUE} if a non-decomposable graphical model is selected}

\item{ntrials}{Number of trials of binomial responses if \code{"binomial"} is included in \code{response_type}}

\item{negbin_init}{Initial value for the over-dispersion parameter of the negative binomial distribution}
}
\value{
The value returned is a list object \code{list(Gamma, B, G, R, D, Cutoff, NGB)}
\itemize{
\item{\code{Î’}}{ matrix of the (thinned) samples drawn from the posterior distribution of the regression coefficients}
\item{\code{G}}{ 3D array of the (thinned) samples drawn from the posterior distribution of the graphs}
\item{\code{R}}{ 3D array of the (thinned) samples drawn from the posterior distribution of the correlation matrix between the
responses}
\item{\code{D}}{ matrix of the (thinned) samples drawn from the posterior distribution of the standard deviations of the
responses (non-identifiable parameters in the case of discrete responses)}
\item{\code{Cutoff}}{ list of the samples drawn from the posterior distribution of the cut-off points for ordinal categorical
responses}
\item{\code{OD}}{ list of the samples drawn from the posterior distribution of the over-dispersion parameter for the negative
responses}
}
}
\description{
MCMC implementation of Bayesian Variable Selection for Gaussian Copula Regression models
}
\details{
For details regarding the model and the algorithm, see details in \insertCite{Alexopoulos2019;textual}{BVS4GCR}. Types of
responses currently supported: \code{c("Gaussian", "binary", "ordinal", "binomial", "negative binomial")}. For ordinal categorical
responses it is assumed that the first category is labelled with zero. The maximum number of categories supported is 5.
}
\examples{
# Example 1: Toy example with only Gaussian responses and decomposable graphs specification

set.seed(12345)
d <- Sim_GCRdata(4, 500, 100, 2, rep("Gaussian", 4), extras = list(rhoY = 0.8, rhoX = 0.7, 
fixed_effect = rep(1, 2), mu_effect = rep(3, 4), var_effect = rep(0.5, 4), s1Lev = 0.05, 
s2Lev = 0.95, std_responses = rep(1, 4)))

output <- BVS4GCR_MCMC(250, 50, 4, 100, d$Y, d$X, 2, rep("Gaussian", 4), c(5, 3 ^2))


# Example 2: Toy example with only Gaussian responses and non-decomposable graphs 

set.seed(12345)
d <- Sim_GCRdata(8, 1000, 100, 1, rep("Gaussian", 8), extras = list(rhoY = 0.8, rhoX = 0.7, 
fixed_effect = 1, mu_effect = rep(3, 8), var_effect = rep(0.5, 8), s1Lev = 0.05, s2Lev = 0.95, 
std_responses = rep(1, 8)))

output <- BVS4GCR_MCMC(250, 50, 4, 100, d$Y, d$X, 1, rep("Gaussian", 8), c(5, 3 ^2), 
nondecomp = TRUE)


# Example 3: Combination of Gaussian, binary and ordinal responses (similar to Scenario I in
# Alexopoulos and Bottolo (2019))

set.seed(12345)
d <- Sim_GCRdata(4, 50, 30, 1, c("Gaussian", "binary", "ordinal", "ordinal"), extras = 
list(rhoY = 0.8, rhoX = 0.7, fixed_effect = 1, mu_effect = c(1, rep(0.5, 3)), var_effect = 
c(1, rep(0.2, 3)), s1Lev = 0.15, s2Lev = 0.95, std_responses = rep(1, 4), ncat = c(3, 4), 
cutpoints = cbind(c(0.5, NA, NA), c(0.5, 1.2, 2))))

output <- BVS4GCR_MCMC(250, 50, 4, 100, d$Y, d$X, 1, c("Gaussian", "binary", "ordinal", 
"ordinal"), c(5, 3 ^2))


# Example 4: Combination of Gaussian and count responses (Scenario IV in Alexopoulos and Bottolo 
# (2019))

set.seed(12345)
d <- Sim_GCRdata(4, 100, 100, 2, c("Gaussian", "binomial", "negative binomial", 
"negative binomial"), extras = list(rhoY = 0.8, rhoX = 0.7, fixed_effect = c(-0.5, 0.5), 
mu_effect = c(1, rep(0.5, 3)), var_effect = c(1, rep(0.2, 3)), s1Lev = 0.05, s2Lev = 0.95, 
std_responses = rep(1, 4), binom_par = 10, negbin_par = c(0.5, 0.75)))

output <- BVS4GCR_MCMC(250, 50, 4, 100, d$Y, d$X, 2, c("Gaussian", "binomial", 
"negative binomial", "negative binomial"), c(5, 3 ^2), ntrials = 10, negbin_init = 
c(0.5, 0.75))

}
\references{
\insertAllCited{}
}
