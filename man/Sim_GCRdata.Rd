% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Sim_GCRdata.R
\name{Sim_GCRdata}
\alias{Sim_GCRdata}
\title{Sim_GCRdata}
\usage{
Sim_GCRdata(
  m,
  n,
  p,
  pfixed,
  response_type,
  extras = list(rhoY = 0.8, rhoX = 0.7, fixed_effect = rep(1, pfixed), mu_effect =
    rep(0, m), var_effect = rep(1, m), s1Lev = 0.1, s2Lev = 1, std_responses = rep(1, m),
    ncat = NULL, cutpoints = NULL, binom_par = NULL, negbin_par = NULL)
)
}
\arguments{
\item{m}{Integer, number of responses}

\item{n}{Integer, number of samples}

\item{p}{Integer, number of predictors}

\item{pfixed}{Integer, number of covariates (including the intercept). If \code{pfixed = 1} only the intercept will be simulated}

\item{response_type}{\code{m}-dimensional character vector specifying the response's type. Response's types currently supported are
\code{c("Gaussian", "binary", "ordinal", "binomial", "negative binomial")}}

\item{extras}{List specifying response-specific arguments. These are the one-lag correlation \code{rhoY} in the autoregressive
model used to simulate the responses, the correlation \code{rhoX} between the predictors (for both, see details in
\insertCite{Rothman2010;textual}{BVS4GCR}), \code{fixed_effect} the vector of the regression coefficients for the fixed
predictors (if simulated) where the first element is assumed to be the intercept, the mean \code{mu_effect} and variance \code{var_effect}
of the Gaussian distribution used to simulate the regression coefficients, the probabilities \code{s1Lev} and \code{s2Lev} utilized
to induce sparsity on the regression coefficients, the standard deviation \code{std_responses} of the response variables, the number
of categories \code{ncat} of each ordinal categorical response (if simulated), the cut-off points \code{cutpoints} used to simulate
the ordinal variables (if simulated), \code{binom_par} and \code{negbinom} the numer of trials in the binomial experiment and the
over-dispersion parameter of the negative binomial distribution. See also the examples below and details in \insertCite{Alexopoulos2019;textual}{BVS4GCR}}
}
\value{
The value returned is a list object \code{list(Y, X, B, R)}
\itemize{
\item{\code{Y}}{ \code{n} times \code{m} matrix of responses}
\item{\code{X}}{ \code{n} times (\code{pfixed} + \code{p}) matrix of covariates (including the intercept if simulated) and
predictors on which Bayesian Variable
Selection is performed}
\item{\code{B}}{ \code{m} times (\code{pfixed} + \code{p}) matrix of regression coefficients}
\item{\code{R}}{ \code{m} times \code{m} correlation matrix used to simulate the responses}
}
}
\description{
Simulate data from the Gaussian Copula Regression model
}
\details{
The parameters \code{s1Lev} and \code{s2Lev} in the \code{extras} list can be specified following the fact that ((1 - \code{s2Lev}) * \code{p})
predictors are irrelevant for all \code{m} responses and that each relevant predictor is common across (\code{s1Lev} * \code{m})
predictors \insertCite{Rothman2010}{BVS4GCR}. Type of responses currently supported: (continuous) Gaussian, (discrete) binary,
ordinal categorical and count (binomial and negative binomial distribution)
}
\examples{
# Example 1: Simulate a combination of Gaussian, binary and ordinal responses

set.seed(12345)
d <- Sim_GCRdata(4, 500, 30, 1, c("Gaussian", "binary", "ordinal", "ordinal"), extras = 
list(rhoY = 0.8, rhoX = 0.7, fixed_effect = 1, mu_effect = c(1, rep(0.5, 3)), var_effect = 
c(1, rep(0.2, 3)), s1Lev = 0.15, s2Lev = 0.95, std_responses = rep(1, 4), ncat = c(3, 4), 
cutpoints = cbind(c(0.5, NA, NA), c(0.5, 1.2, 2))))

par(mfrow = c(2, 2))
hist(d$Y[,1], main = "Gaussian", xlab = expression(Y[1]), prob = TRUE, ylab = "")
barplot(prop.table(table(d$Y[, 2])), main = "binary", xlab = expression(Y[2]))
barplot(prop.table(table(d$Y[, 3])), main = "ordinal (3 categories)", xlab = expression(Y[3]))
barplot(prop.table(table(d$Y[, 4])), main = "ordinal (4 categories)", xlab = expression(Y[4]))

par(mfrow = c(2, 2))
plot(d$B[1, ], ylab=expression(beta[1]), main=expression(Y[1]), xlab="Pred.",pch = 16,cex = .7)
plot(d$B[2, ], ylab=expression(beta[2]), main=expression(Y[2]), xlab="Pred.",pch = 16,cex = .7)
plot(d$B[3, ], ylab=expression(beta[3]), main=expression(Y[3]), xlab="Pred.",pch = 16,cex = .7)
plot(d$B[4, ], ylab=expression(beta[4]), main=expression(Y[4]), xlab="Pred.",pch = 16,cex = .7)


# Example 2: As in Example 1 with more categories for the forth response 

set.seed(12345)
d <- Sim_GCRdata(4, 500, 30, 1, c("Gaussian", "binary", "ordinal", "ordinal"), extras = 
list(rhoY = 0.8, rhoX = 0.7, fixed_effect = 1, mu_effect = c(1, rep(0.5, 3)), var_effect = 
c(1, rep(0.2, 3)), s1Lev = 0.15, s2Lev = 0.95, std_responses = rep(1, 4), ncat = c(3, 5),
cutpoints = cbind(c(0.5, 1, NA, NA), c(0.5, 0.7, 1.5, 2))))

par(mfrow = c(2, 2))
hist(d$Y[, 1], main = "Gaussian", xlab = expression(Y[1]), prob = TRUE, ylab = "")
barplot(prop.table(table(d$Y[, 2])), main = "binary", xlab = expression(Y[2]))
barplot(prop.table(table(d$Y[, 3])), main = "ordinal (3 categories)", xlab = expression(Y[3]))
barplot(prop.table(table(d$Y[, 4])), main = "ordinal (5 categories)", xlab = expression(Y[4]))


# Example 3: Simulate a combination of Gaussian and count responses

set.seed(12345)
d <- Sim_GCRdata(4, 1000, 100, 2, c("Gaussian", "binomial", "negative binomial", 
"negative binomial"), extras = list(rhoY = 0.8, rhoX = 0.7, fixed_effect = c(-0.5, 0.5), 
mu_effect = c(1, rep(0.5, 3)), var_effect = c(1, rep(0.2, 3)), s1Lev = 0.05, s2Lev = 0.95, 
std_responses = rep(1, 4), binom_par = 10, negbin_par = c(0.5, 0.75)))

par(mfrow = c(2, 2))
hist(d$Y[,1], main = "Gaussian", xlab = expression(Y[1]), prob = TRUE, ylab = "")
hist(table(d$Y[, 2]), main = "binomial", xlab = expression(Y[2]))
hist(table(d$Y[, 3]), main = "negative binomial", xlab = expression(Y[3]))
hist(table(d$Y[, 4]), main = "negative binomial", xlab = expression(Y[4]))

}
\references{
\insertAllCited{}
}
